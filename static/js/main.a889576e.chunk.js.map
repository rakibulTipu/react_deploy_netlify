{"version":3,"sources":["hooks/useWindowSize.js","Header.js","Nav.js","Footer.js","Post.js","Feed.js","Home.js","NewPost.js","PostPage.js","EditPost.js","About.js","Missing.js","hooks/useAxiosFetch.js","App.js","api/posts.js","store.js","index.js"],"names":["useWindowSize","useState","width","undefined","height","windowSize","setWindowSize","useEffect","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener","Header","title","className","Nav","posts","useStoreState","state","search","setSearch","useStoreActions","actions","setSearchResults","filteredResults","filter","post","body","toLowerCase","includes","reverse","onSubmit","e","preventDefault","htmlFor","id","type","placeholder","value","onChange","target","to","Footer","postCount","Post","datetime","length","slice","Feed","map","Home","isLoading","fetchError","searchResults","style","color","NewPost","history","useHistory","postTitle","postBody","savePost","setPostTitle","setPostBody","format","Date","push","required","PostPage","useParams","deletePost","getPostById","onClick","handleDelete","EditPost","editTitle","editBody","editPost","setEditTitle","setEditBody","handleEdit","About","marginTop","Missing","useAxiosFetch","dataUrl","data","setData","setFetchError","setIsLoading","isMounted","source","axios","CancelToken","url","a","get","cancelToken","token","response","message","fetchData","cancel","App","setPosts","exact","path","component","create","baseURL","createStore","action","payload","computed","find","toString","thunk","newPost","helpers","getState","api","console","log","delete","updatedPost","put","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.a889576e.chunk.js","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nconst useWindowSize = () => {\r\n  const [windowSize, setWindowSize] = useState({\r\n    width: undefined,\r\n    height: undefined,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const handleResize = () => {\r\n      setWindowSize({\r\n        width: window.innerWidth,\r\n        height: window.innerHeight,\r\n      });\r\n    };\r\n\r\n    handleResize();\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowSize;\r\n};\r\n\r\nexport default useWindowSize;\r\n","import { FaLaptop, FaTabletAlt, FaMobileAlt } from \"react-icons/fa\";\r\nimport useWindowSize from \"./hooks/useWindowSize\";\r\n\r\nconst Header = ({ title }) => {\r\n  const { width } = useWindowSize();\r\n\r\n  return (\r\n    <header className=\"Header\">\r\n      <h1>{title}</h1>\r\n      {width < 768 ? (\r\n        <FaMobileAlt />\r\n      ) : width < 992 ? (\r\n        <FaTabletAlt />\r\n      ) : (\r\n        <FaLaptop />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import { Link } from \"react-router-dom\";\r\nimport { useEffect } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst Nav = () => {\r\n  const posts = useStoreState((state) => state.posts);\r\n  const search = useStoreState((state) => state.search);\r\n  const setSearch = useStoreActions((actions) => actions.setSearch);\r\n  const setSearchResults = useStoreActions(\r\n    (actions) => actions.setSearchResults\r\n  );\r\n\r\n  useEffect(() => {\r\n    const filteredResults = posts.filter(\r\n      (post) =>\r\n        post.body.toLowerCase().includes(search.toLowerCase()) ||\r\n        post.title.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults.reverse());\r\n  }, [posts, search, setSearchResults]);\r\n\r\n  return (\r\n    <nav className=\"Nav\">\r\n      <form className=\"searchForm\" onSubmit={(e) => e.preventDefault()}>\r\n        <label htmlFor=\"search\">Search Posts</label>\r\n        <input\r\n          id=\"search\"\r\n          type=\"text\"\r\n          placeholder=\"Search Posts\"\r\n          value={search}\r\n          onChange={(e) => setSearch(e.target.value)}\r\n        />\r\n      </form>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/post\">Post</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import { useStoreState } from \"easy-peasy\";\r\nconst Footer = () => {\r\n  const postCount = useStoreState((state) => state.postCount);\r\n  return (\r\n    <footer className=\"Footer\">\r\n      <p>{postCount} Blog Posts</p>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Post = ({ post }) => {\r\n  return (\r\n    <article className=\"post\">\r\n      <Link to={`/post/${post.id}`}>\r\n        <h2>{post.title}</h2>\r\n        <p className=\"postDate\">{post.datetime}</p>\r\n      </Link>\r\n      <p className=\"postBody\">\r\n        {post.body.length <= 25 ? post.body : `${post.body.slice(0, 25)}...`}\r\n      </p>\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","import Post from \"./Post\";\r\n\r\nconst Feed = ({ posts }) => {\r\n  return (\r\n    <>\r\n      {posts.map((post) => (\r\n        <Post key={post.id} post={post} />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","import Feed from \"./Feed\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst Home = ({ isLoading, fetchError }) => {\r\n  const searchResults = useStoreState((state) => state.searchResults);\r\n\r\n  return (\r\n    <main className=\"Home\">\r\n      {isLoading && <p className=\"statusMsg\">Loading posts...</p>}\r\n      {!isLoading && fetchError && (\r\n        <p className=\"statusMsg\" style={{ color: \"red\" }}>\r\n          {fetchError}\r\n        </p>\r\n      )}\r\n      {!isLoading &&\r\n        !fetchError &&\r\n        (searchResults.length ? (\r\n          <Feed posts={searchResults} />\r\n        ) : (\r\n          <p className=\"statusMsg\">No posts to display.</p>\r\n        ))}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import { useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst NewPost = () => {\r\n  const history = useHistory();\r\n\r\n  const posts = useStoreState((state) => state.posts);\r\n  const postTitle = useStoreState((state) => state.postTitle);\r\n  const postBody = useStoreState((state) => state.postBody);\r\n\r\n  const savePost = useStoreActions((actions) => actions.savePost);\r\n  const setPostTitle = useStoreActions((actions) => actions.setPostTitle);\r\n  const setPostBody = useStoreActions((actions) => actions.setPostBody);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const id = posts.length ? posts[posts.length - 1].id + 1 : 1;\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const newPost = { id, title: postTitle, datetime, body: postBody };\r\n    savePost(newPost);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      <h2>New Post</h2>\r\n      <form className=\"newPostForm\" onSubmit={handleSubmit}>\r\n        <label htmlFor=\"postTitle\">Title:</label>\r\n        <input\r\n          id=\"postTitle\"\r\n          type=\"text\"\r\n          required\r\n          value={postTitle}\r\n          onChange={(e) => setPostTitle(e.target.value)}\r\n        />\r\n        <label htmlFor=\"postBody\">Post:</label>\r\n        <textarea\r\n          id=\"postBody\"\r\n          required\r\n          value={postBody}\r\n          onChange={(e) => setPostBody(e.target.value)}\r\n        />\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default NewPost;\r\n","import { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst PostPage = () => {\r\n  const { id } = useParams();\r\n  const history = useHistory();\r\n  const deletePost = useStoreActions((actions) => actions.deletePost);\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id);\r\n\r\n  const handleDelete = (id) => {\r\n    deletePost(id);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  return (\r\n    <main className=\"PostPage\">\r\n      <article className=\"post\">\r\n        {post && (\r\n          <>\r\n            <h2>{post.title}</h2>\r\n            <p className=\"postDate\">{post.datetime}</p>\r\n            <p className=\"postBody\">{post.body}</p>\r\n            <Link to={`/edit/${post.id}`}>\r\n              <button className=\"editButton\">Edit Post</button>\r\n            </Link>\r\n            <button\r\n              className=\"deleteButton\"\r\n              onClick={() => handleDelete(post.id)}\r\n            >\r\n              Delete Post\r\n            </button>\r\n          </>\r\n        )}\r\n        {!post && (\r\n          <>\r\n            <h2>Post Not Found</h2>\r\n            <p>Well, that's disappointing.</p>\r\n            <p>\r\n              <Link to=\"/\">Visit Our Homepage</Link>\r\n            </p>\r\n          </>\r\n        )}\r\n      </article>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default PostPage;\r\n","import { useEffect } from \"react\";\r\nimport { useParams, Link, useHistory } from \"react-router-dom\";\r\nimport { format } from \"date-fns\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nconst EditPost = () => {\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n\r\n  const editTitle = useStoreState((state) => state.editTitle);\r\n  const editBody = useStoreState((state) => state.editBody);\r\n\r\n  const editPost = useStoreActions((actions) => actions.editPost);\r\n  const setEditTitle = useStoreActions((actions) => actions.setEditTitle);\r\n  const setEditBody = useStoreActions((actions) => actions.setEditBody);\r\n\r\n  const getPostById = useStoreState((state) => state.getPostById);\r\n  const post = getPostById(id);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setEditTitle(post.title);\r\n      setEditBody(post.body);\r\n    }\r\n  }, [post, setEditTitle, setEditBody]);\r\n\r\n  const handleEdit = (id) => {\r\n    const datetime = format(new Date(), \"MMMM dd, yyyy pp\");\r\n    const updatedPost = { id, title: editTitle, datetime, body: editBody };\r\n    editPost(updatedPost);\r\n    history.push(`/post/${id}`);\r\n  };\r\n\r\n  return (\r\n    <main className=\"NewPost\">\r\n      {editTitle && (\r\n        <>\r\n          <h2>Edit Post</h2>\r\n          <form className=\"newPostForm\" onSubmit={(e) => e.preventDefault()}>\r\n            <label htmlFor=\"postTitle\">Title:</label>\r\n            <input\r\n              id=\"postTitle\"\r\n              type=\"text\"\r\n              required\r\n              value={editTitle}\r\n              onChange={(e) => setEditTitle(e.target.value)}\r\n            />\r\n            <label htmlFor=\"postBody\">Post:</label>\r\n            <textarea\r\n              id=\"postBody\"\r\n              required\r\n              value={editBody}\r\n              onChange={(e) => setEditBody(e.target.value)}\r\n            />\r\n            <button type=\"button\" onClick={() => handleEdit(post.id)}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </>\r\n      )}\r\n      {!editTitle && (\r\n        <>\r\n          <h2>Post Not Found</h2>\r\n          <p>Well, that's disappointing.</p>\r\n          <p>\r\n            <Link to=\"/\">Visit Our Homepage</Link>\r\n          </p>\r\n        </>\r\n      )}\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default EditPost;\r\n","const About = () => {\r\n  return (\r\n    <main className=\"About\">\r\n      <h2>About</h2>\r\n      <p style={{ marginTop: \"1rem\" }}>\r\n        This blog app is a project in the Learn React tutorial series.\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst Missing = () => {\r\n  return (\r\n    <main className=\"Missing\">\r\n      <h2>Page Not Found</h2>\r\n      <p>Well, that's disappointing.</p>\r\n      <p>\r\n        <Link to=\"/\">Visit Our Homepage</Link>\r\n      </p>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Missing;\r\n","import { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n  const [data, setData] = useState([]);\r\n  const [fetchError, setFetchError] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let isMounted = true;\r\n    const source = axios.CancelToken.source();\r\n\r\n    const fetchData = async (url) => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await axios.get(url, {\r\n          cancelToken: source.token,\r\n        });\r\n        if (isMounted) {\r\n          setData(response.data);\r\n          setFetchError(null);\r\n        }\r\n      } catch (err) {\r\n        if (isMounted) {\r\n          setFetchError(err.message);\r\n          setData([]);\r\n        }\r\n      } finally {\r\n        isMounted && setIsLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData(dataUrl);\r\n\r\n    const cleanUp = () => {\r\n      isMounted = false;\r\n      source.cancel();\r\n    };\r\n\r\n    return cleanUp;\r\n  }, [dataUrl]);\r\n\r\n  return { data, fetchError, isLoading };\r\n};\r\n\r\nexport default useAxiosFetch;\r\n","import Header from \"./Header\";\nimport Nav from \"./Nav\";\nimport Footer from \"./Footer\";\nimport Home from \"./Home\";\nimport NewPost from \"./NewPost\";\nimport PostPage from \"./PostPage\";\nimport EditPost from \"./EditPost\";\nimport About from \"./About\";\nimport Missing from \"./Missing\";\nimport { useEffect } from \"react\";\nimport useAxiosFetch from \"./hooks/useAxiosFetch\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { useStoreActions } from \"easy-peasy\";\n\nfunction App() {\n  const setPosts = useStoreActions((actions) => actions.setPosts);\n  const { data, fetchError, isLoading } = useAxiosFetch(\n    \"http://localhost:3500/posts\"\n  );\n\n  useEffect(() => {\n    setPosts(data);\n  }, [data, setPosts]);\n\n  return (\n    <div className=\"App\">\n      <Header title=\"React JS Blog\" />\n\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\">\n          <Home isLoading={isLoading} fetchError={fetchError} />\n        </Route>\n        <Route exact path=\"/post\" component={NewPost} />\n        <Route path=\"/edit/:id\" component={EditPost} />\n        <Route path=\"/post/:id\" component={PostPage} />\n        <Route path=\"/about\" component={About} />\n        <Route path=\"*\" component={Missing} />\n      </Switch>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"http://localhost:3500\",\r\n});\r\n","import { createStore, action, thunk, computed } from \"easy-peasy\";\r\nimport api from \"./api/posts\";\r\n\r\nexport default createStore({\r\n  posts: [],\r\n  setPosts: action((state, payload) => {\r\n    state.posts = payload;\r\n  }),\r\n  postTitle: \"\",\r\n  setPostTitle: action((state, payload) => {\r\n    state.postTitle = payload;\r\n  }),\r\n  postBody: \"\",\r\n  setPostBody: action((state, payload) => {\r\n    state.postBody = payload;\r\n  }),\r\n  editTitle: \"\",\r\n  setEditTitle: action((state, payload) => {\r\n    state.editTitle = payload;\r\n  }),\r\n  editBody: \"\",\r\n  setEditBody: action((state, payload) => {\r\n    state.editBody = payload;\r\n  }),\r\n  search: \"\",\r\n  setSearch: action((state, payload) => {\r\n    state.search = payload;\r\n  }),\r\n  searchResults: [],\r\n  setSearchResults: action((state, payload) => {\r\n    state.searchResults = payload;\r\n  }),\r\n  postCount: computed((state) => state.posts.length),\r\n  getPostById: computed((state) => {\r\n    return (id) => state.posts.find((post) => post.id.toString() === id);\r\n  }),\r\n  savePost: thunk(async (actions, newPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    try {\r\n      const response = await api.post(\"/posts\", newPost);\r\n      actions.setPosts([...posts, response.data]);\r\n      actions.setPostTitle(\"\");\r\n      actions.setPostBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n  deletePost: thunk(async (actions, id, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    try {\r\n      await api.delete(`/posts/${id}`);\r\n      actions.setPosts(posts.filter((post) => post.id !== id));\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n  editPost: thunk(async (actions, updatedPost, helpers) => {\r\n    const { posts } = helpers.getState();\r\n    const { id } = updatedPost;\r\n    try {\r\n      const response = await api.put(`/posts/${id}`, updatedPost);\r\n      actions.setPosts(\r\n        posts.map((post) => (post.id === id ? { ...response.data } : post))\r\n      );\r\n      actions.setEditTitle(\"\");\r\n      actions.setEditBody(\"\");\r\n    } catch (err) {\r\n      console.log(`Error: ${err.message}`);\r\n    }\r\n  }),\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { StoreProvider } from \"easy-peasy\";\nimport store from \"./store\";\nReactDOM.render(\n  <React.StrictMode>\n    <StoreProvider store={store}>\n      <Router>\n        <Route path=\"/\" component={App} />\n      </Router>\n    </StoreProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}